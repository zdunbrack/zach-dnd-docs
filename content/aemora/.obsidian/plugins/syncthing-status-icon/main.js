/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var g=Object.create;var a=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var f=(t,s)=>{for(var e in s)a(t,e,{get:s[e],enumerable:!0})},h=(t,s,e,i)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of u(s))!p.call(t,n)&&n!==e&&a(t,n,{get:()=>s[n],enumerable:!(i=S(s,n))||i.enumerable});return t};var E=(t,s,e)=>(e=t!=null?g(m(t)):{},h(s||!t||!t.__esModule?a(e,"default",{value:t,enumerable:!0}):e,t)),I=t=>h(a({},"__esModule",{value:!0}),t);var R={};f(R,{default:()=>o});module.exports=I(R);var r=E(require("http")),d=require("events"),c=class extends d.EventEmitter{constructor(){super(...arguments);this.isRunning=!1;this.hasCheckedInitialState=!1}checkStatus(){let i=r.request({hostname:"localhost",port:8384,path:"/",method:"GET"},n=>{this.isRunning||(this.isRunning=!0,this.emit("connected")),this.hasCheckedInitialState=!0});i.on("error",()=>{this.isRunning?(this.isRunning=!1,this.emit("disconnected")):this.hasCheckedInitialState||(this.emit("disconnected"),this.hasCheckedInitialState=!0)}),i.end()}};var l=require("obsidian"),k="\u{1F7E2}",v="\u{1F534}",C={check_interval:30},o=class extends l.Plugin{async onload(){await this.loadSettings();let e=new c,i=this.addStatusBarItem();i.setText("Loading..."),e.on("connected",()=>{i.setText(k),i.setAttribute("title","Connected to Syncthing")}),e.on("disconnected",()=>{i.setText(v),i.setAttribute("title","Disconnected from Syncthing")}),this.registerInterval(window.setInterval(()=>e.checkStatus(),this.settings.check_interval*1e3)),e.checkStatus()}async loadSettings(){this.settings=Object.assign({},C,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};

/* nosourcemap */